{"version":3,"sources":["components/Top.js","other/api.js","components/Home.js","components/Topic.js","components/AddTopic.js","components/AddPost.js","components/index.js","App.js","serviceWorker.js","index.js"],"names":["button","link","AppBar","position","Toolbar","style","textDecoration","color","flexGrow","to","Typography","variant","Button","api","getTopics","a","fetch","res","json","console","error","addTopic","data","method","headers","body","JSON","stringify","rtn","status","getTopicInfo","topic","URL","getTopicPosts","addPost","useStyles","makeStyles","theme","Grid_item","padding","breakpoints","down","display","flexDirection","alignItems","classes","useState","topics","setTopics","useEffect","then","Top","Container","maxWidth","Paper","margin","elevation","textAlign","Grid","container","item","xs","md","className","List","map","x","index","key","_id","title","ListItem","description","marginBottom","fontWeight","props","match","params","setDescription","posts","setPosts","author","Custom","styled","TextField","borderRadius","backgroundColor","Box","justifyContent","height","Box2","width","Element","zIndex","Brand","Login","setTitle","loading","setLoading","Submit","history","push","alert","message","handleKey","e","keyCode","document","addEventListener","removeEventListener","left","top","backgroundImage","onChange","event","target","value","id","label","multiline","rows","CircularProgress","marginTop","onClick","setAuthor","obj","Index","exact","path","component","Home","AddTopic","Topic","AddPost","App","Boolean","window","location","hostname","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.936a8356.chunk.js","sourcesContent":["import React from 'react';\r\nimport {AppBar, Toolbar, Typography, Button} from \"@material-ui/core\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nexport default ({button, link}) => {\r\n    return(\r\n        <AppBar position=\"static\">\r\n            <Toolbar>\r\n                <Link style = {{textDecoration: \"none\", color: \"white\", flexGrow: 1}} to = \"\">\r\n                    <Typography variant=\"h4\">\r\n                        SubDit\r\n                    </Typography>\r\n                </Link>\r\n                <Link style ={{textDecoration: \"none\", color: \"inherit\"}} to = {link}>\r\n                    <Button color=\"inherit\">{button}</Button>\r\n                </Link>\r\n            </Toolbar>\r\n        </AppBar>\r\n    )\r\n}","const getTopics = async () =>{\r\n    let URL = \"https://vanilla2431.herokuapp.com/topics\";\r\n    try{\r\n        let res = await fetch(URL);\r\n        return res.json();\r\n    }\r\n    catch(e){\r\n        console.error(e);\r\n    }\r\n}\r\nconst addTopic = async (data) => {\r\n    let URL = \"https://vanilla2431.herokuapp.com/topics\";\r\n    try{\r\n        let res = await fetch(URL,{\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(data)\r\n        })\r\n        let rtn = await res.json();\r\n        rtn.status = res.status;\r\n        return rtn;\r\n    }\r\n    catch (e) {\r\n        console.error(e);\r\n    }\r\n}\r\nconst getTopicInfo = async (topic) => {\r\n    let URL = `https://vanilla2431.herokuapp.com/topics/${topic}`\r\n    try{\r\n        let res = await fetch(URL);\r\n        return res.json();\r\n    }\r\n    catch(e){\r\n        console.error(e);\r\n    }\r\n}\r\nconst getTopicPosts = async (topic) => {\r\n    let URL = `https://vanilla2431.herokuapp.com/posts/${topic}`\r\n    try{\r\n        let res = await fetch(URL);\r\n        return res.json();\r\n    }\r\n    catch (e) {\r\n        console.error(e);\r\n    }\r\n}\r\nconst addPost = async (topic, data) =>{\r\n    let URL = `https://vanilla2431.herokuapp.com/posts/${topic}`;\r\n    try{\r\n        let res = await fetch(URL,{\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(data)\r\n        })\r\n        return res.json();\r\n    }\r\n    catch (e) {\r\n        console.error(e);\r\n    }\r\n}\r\n\r\nconst api = {\r\n    getTopics,\r\n    addTopic,\r\n    getTopicInfo,\r\n    getTopicPosts,\r\n    addPost\r\n}\r\nexport default api;\r\n","import React, {useEffect, useState} from 'react'\r\nimport {Container, Typography, List, ListItem, Grid, Paper} from \"@material-ui/core\";\r\nimport {Link} from \"react-router-dom\"\r\nimport Top from \"./Top\";\r\nimport api from \"../other/api\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    Grid_item: {\r\n        padding:15,\r\n        [theme.breakpoints.down(\"sm\")]: {\r\n            display: \"flex\",\r\n            flexDirection:\"column\",\r\n            alignItems: \"center\"\r\n        }\r\n    }\r\n}));\r\n\r\nexport default () => {\r\n    const classes = useStyles();\r\n    const [topics, setTopics] = useState([]);\r\n    useEffect(() => {\r\n        api.getTopics().then((data) =>{\r\n            setTopics(data);\r\n        })\r\n    }, []);\r\n    return(\r\n        <>\r\n            <Top button = \"Add A Topic\" link = \"/addtopic\"/>\r\n            <Container maxWidth=\"md\">\r\n                <Paper style = {{padding: \"10px\", margin: \"10px\"}} elevation = {3}>\r\n                    <Typography style = {{textAlign: \"center\", margin: \"20px\"}} variant=\"h3\">\r\n                        Welcome to SubDit\r\n                    </Typography>\r\n                    <Grid container>\r\n                        <Grid item xs = {12} md = {6} className={classes.Grid_item}>\r\n                            <Typography variant = \"h5\">\r\n                                Explore the Topics:\r\n                            </Typography>\r\n                            <List>\r\n                                {topics.map((x, index) => (\r\n                                    <Link style = {{textDecoration: \"none\", color: \"black\"}} key = {x._id} to = {\"/topics/\" + x.title}>\r\n                                        <ListItem button style = {{display: \"flex\", flexDirection: \"column\", alignItems: \"unset\"}}>\r\n                                            <Typography variant=\"h6\">\r\n                                                {index+1}. {x.title}\r\n                                            </Typography>\r\n                                            <Typography variant = \"subtitle1\">\r\n                                                {x.description}\r\n                                            </Typography>\r\n                                        </ListItem>\r\n                                    </Link>\r\n                                ))}\r\n                            </List>\r\n                        </Grid>\r\n                        <Grid item xs = {12} md = {6} className={classes.Grid_item}>\r\n                            <Typography style ={{marginBottom: \"5px\"}} variant = \"h5\">\r\n                                About this Site:\r\n                            </Typography>\r\n                            <Typography style ={{fontWeight: 500}} variant = \"h5\">\r\n                                If you are here to test this magnificent piece of garbage, then HI!\r\n                            </Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Paper>\r\n            </Container>\r\n        </>\r\n    )\r\n}","import React, {useEffect, useState} from 'react';\r\nimport {Container, Paper, Typography} from \"@material-ui/core\";\r\nimport api from \"../other/api\";\r\nimport Top from \"./Top\";\r\n\r\nexport default (props) => {\r\n    const [title] = useState(props.match.params.title);\r\n    const [description, setDescription] = useState(\"\");\r\n    const [posts, setPosts] = useState([]);\r\n    useEffect(() => {\r\n        api.getTopicInfo(title).then(x => {\r\n            setDescription(x.description);\r\n        });\r\n        api.getTopicPosts(title).then(x => {\r\n            setPosts(x);\r\n        })\r\n    }, [title])\r\n    return(\r\n        <>\r\n            <Top button = \"Add A Post\" link = {\"/addpost/\" + title}/>\r\n            <Container style ={{padding: 20}} maxWidth=\"md\">\r\n                <Typography variant = \"h4\">\r\n                    Topic: {title}\r\n                </Typography>\r\n                <Typography variant = \"h5\">\r\n                    Topic description: {description}\r\n                </Typography>\r\n                <Typography variant = \"h4\">\r\n                    Posts:\r\n                </Typography>\r\n                {posts.map(x => (\r\n                    <Paper key = {x._id} elevation = {3} style = {{margin:10, padding:15}}>\r\n                        <Typography variant = \"h5\">\r\n                            {x.title}\r\n                        </Typography>\r\n                        <Typography variant = \"subtitle1\">\r\n                            {x.author}\r\n                        </Typography>\r\n                        <Typography variant = \"h6\">\r\n                            {x.description}\r\n                        </Typography>\r\n                    </Paper>\r\n                ))}\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\n","import React, {useEffect, useState} from 'react';\r\nimport {Link} from \"react-router-dom\"\r\nimport {TextField, Button, Typography, CircularProgress,} from \"@material-ui/core\";\r\nimport { styled } from '@material-ui/core/styles';\r\nimport Box from '@material-ui/core/Box';\r\nimport '../wave.css';\r\nimport api from \"../other/api\"\r\nconst Custom = styled(TextField)({\r\n    borderRadius: \"4px\",\r\n    backgroundColor: \"rgb(255,255,255)\",\r\n});\r\n\r\nconst style = {\r\n    Box:{\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        height: \"100vh\"\r\n    },\r\n    Box2:{\r\n        width: \"300px\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\"\r\n    },\r\n    Element: {\r\n        zIndex: \"1000\",\r\n        width: \"100%\",\r\n        marginBottom: \"15px\"\r\n    },\r\n    Brand:{\r\n        // position: \"absolute\",\r\n        // top: \"23%\",\r\n        marginBottom: \"30px\",\r\n        zIndex: \"1000\",\r\n        textAlign: \"center\",\r\n        color: \"white\"\r\n    }\r\n\r\n}\r\n\r\n\r\nconst Login = (props) => {\r\n    const [title, setTitle] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n    const [loading, setLoading] = useState(false);\r\n    const Submit = () =>{\r\n        setLoading(true);\r\n        const data = {\r\n            title: title,\r\n            description: description\r\n        }\r\n        api.addTopic(data).then(x => {\r\n            if (x.status === 200){\r\n                setLoading(false);\r\n                props.history.push(\"/\");\r\n            }\r\n            else{\r\n                alert(x.message);\r\n                setLoading(false);\r\n            }\r\n        });\r\n    }\r\n    const handleKey = (e) => {\r\n        if (e.keyCode === 13){\r\n            Submit();\r\n        }\r\n    }\r\n    useEffect(() =>{\r\n        document.addEventListener(\"keyup\", handleKey);\r\n        return(() =>{\r\n            document.removeEventListener(\"keyup\", handleKey);\r\n        });\r\n    });\r\n    return(\r\n        <>\r\n            <Link to =\"/\" style ={{textDecoration: \"none\", color: \"White\", position: \"absolute\", left: \"15\", top: \"15\", zIndex: \"10000\"}}>\r\n                <Typography style = {{margin:\"15px\"}} variant = \"h5\">\r\n                    Back to Home\r\n                </Typography>\r\n            </Link>\r\n            <div style = {{backgroundColor: \"#27273C\"}} className=\"waveWrapper waveAnimation\">\r\n                <div className=\"waveWrapperInner bgTop\">\r\n                    <div className=\"wave waveTop\" style={{backgroundImage: \"url('http://front-end-noobs.com/jecko/img/wave-top.png'\"}}/>\r\n                </div>\r\n                <div className=\"waveWrapperInner bgMiddle\">\r\n                    <div className=\"wave waveMiddle\" style={{backgroundImage: \"url('http://front-end-noobs.com/jecko/img/wave-mid.png'\"}}/>\r\n                </div>\r\n                <div className=\"waveWrapperInner bgBottom\">\r\n                    <div className=\"wave waveBottom\" style={{backgroundImage: \"url('http://front-end-noobs.com/jecko/img/wave-bot.png'\"}}/>\r\n                </div>\r\n            </div>\r\n            <Box style = {style.Box} maxWidth = \"xs\">\r\n                <Typography style = {style.Brand} variant = \"h2\">Add A Topic</Typography>\r\n                <Box style = {style.Box2}>\r\n                    <Custom onChange = {event => setTitle(event.target.value)} value = {title} style ={style.Element} id=\"outlined-basic\" label=\"Title\" variant=\"filled\" />\r\n                    <Custom multiline rows = {3} onChange = {event => setDescription(event.target.value)} value = {description} style ={style.Element} id=\"outlined-basic\" label=\"Description\" variant=\"filled\" />\r\n                    {loading ?\r\n                        <CircularProgress style ={{zIndex: \"100\", marginTop: \"10px\"}}/> :\r\n                        <Button onClick={Submit} style={style.Element} variant=\"contained\" color=\"primary\">\r\n                            Submit\r\n                        </Button>}\r\n                </Box>\r\n            </Box>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Login;","import React, {useState} from 'react';\r\nimport {styled} from \"@material-ui/core/styles\";\r\nimport {CircularProgress, TextField} from \"@material-ui/core\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport api from \"../other/api\";\r\nconst Custom = styled(TextField)({\r\n    borderRadius: \"4px\",\r\n    backgroundColor: \"rgb(255,255,255)\",\r\n});\r\n\r\nconst style = {\r\n    Element: {\r\n        width: \"100%\",\r\n        marginBottom: \"15px\"\r\n    },\r\n    Container: {\r\n        height: \"100vh\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\"\r\n    }\r\n}\r\n\r\n\r\nexport default (props) =>{\r\n    const [title,setTitle] = useState(\"\");\r\n    const [author,setAuthor] = useState(\"\");\r\n    const [description,setDescription] = useState(\"\");\r\n    const [loading, setLoading] = useState(false);\r\n    const Submit = () => {\r\n        setLoading(true);\r\n        const obj = {\r\n            title:title,\r\n            author:author,\r\n            description: description\r\n        }\r\n        api.addPost(props.match.params.topic, obj).then(() =>{\r\n            setLoading(false);\r\n            props.history.push(\"/topics/\" + props.match.params.topic);\r\n        })\r\n    }\r\n    return(\r\n        <Container maxWidth=\"sm\" style = {style.Container}>\r\n            <Typography variant=\"h5\" style = {{marginBottom: 15}}>\r\n                You are adding a post to the topic: {props.match.params.topic}\r\n            </Typography>\r\n            <Custom color = {\"primary\"} onChange = {event => setTitle(event.target.value)} value = {title} style ={style.Element} id=\"outlined-basic\" label=\"Title\" variant=\"filled\" />\r\n            <Custom color = {\"primary\"} onChange = {event => setAuthor(event.target.value)} value = {author} style ={style.Element} id=\"outlined-basic\" label=\"Author\" variant=\"filled\" />\r\n            <Custom color = {\"primary\"} multiline rows = {5} onChange = {event => setDescription(event.target.value)} value = {description} style ={style.Element} id=\"outlined-basic\" label=\"Body\" variant = \"filled\"/>\r\n            {loading ?\r\n                <CircularProgress style ={{zIndex: \"100\", marginTop: \"10px\"}}/> :\r\n                <Button onClick={Submit} style={style.Element} variant=\"contained\" color=\"primary\">\r\n                    Submit\r\n                </Button>}\r\n        </Container>\r\n    )\r\n}","import React from 'react';\r\nimport \"../style/index.css\";\r\n// import { Router, Link } from \"@reach/router\"\r\n// import {\r\n//     createMemorySource,\r\n//     createHistory,\r\n//     LocationProvider\r\n// } from \"@reach/router\"\r\nimport {\r\n    HashRouter as Router,\r\n    Route,\r\n} from \"react-router-dom\";\r\nimport Home from \"./Home\";\r\nimport Topic from \"./Topic\";\r\nimport AddTopic from \"./AddTopic\";\r\nimport AddPost from \"./AddPost\";\r\n\r\nconst Index = () => {\r\n    return(\r\n        <Router>\r\n            <Route exact path = \"/\" component = {Home}/>\r\n            <Route exact path = \"/addtopic\" component = {AddTopic}/>\r\n            <Route path = \"/topics/:title\" component = {Topic}/>\r\n            <Route path = \"/addpost/:topic\" component = {AddPost}/>\r\n        </Router>\r\n    )\r\n}\r\nexport default Index;","import React from 'react';\nimport Index from \"./components/index\"\n\nfunction App() {\n  return (\n    <Index/>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}